{"version":3,"sources":["App/common/Container/styled.js","App/common/List/styled.js","App/common/LearnList/index.js","App/common/Section/styled.js","App/common/Section/index.js","App/common/SkillList/index.js","App/App.js","reportWebVitals.js","App/GlobalStyle.js","index.js","App/theme.js"],"names":["Container","styled","main","StyledList","ul","ListItem","li","LearnList","StyledSection","section","SubHeader","h2","Section","title","body","SkillList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","theme","document","getElementById"],"mappings":"gMAEaA,EAAYC,UAAOC,KAAV,gDCATC,EAAaF,UAAOG,GAAV,8MAUVC,EAAWJ,UAAOK,GAAV,0H,OCcNC,EAvBG,kBACd,eAACJ,EAAD,WACI,cAACE,EAAD,4BAGA,cAACA,EAAD,sBAGA,cAACA,EAAD,sBAGA,cAACA,EAAD,2BAGA,cAACA,EAAD,4BAGA,cAACA,EAAD,0BClBKG,EAAgBP,UAAOQ,QAAV,8OASbC,EAAYT,UAAOU,GAAV,mJCCPC,EATC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACZ,eAACN,EAAD,WACI,cAACE,EAAD,UACKG,IAEJC,MC2EMC,EAhFG,kBACd,eAACZ,EAAD,WACI,cAACE,EAAD,yCAGA,cAACA,EAAD,oCAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,2BAGA,cAACA,EAAD,yCAGA,cAACA,EAAD,oCAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,2BAGA,cAACA,EAAD,yCAGA,cAACA,EAAD,oCAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,2BAGA,cAACA,EAAD,yCAGA,cAACA,EAAD,oCAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,2BAGA,cAACA,EAAD,yCAGA,cAACA,EAAD,oCAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,uBAGA,cAACA,EAAD,+BCzDOW,I,EAAAA,EAff,WACE,OACE,eAAChB,EAAD,WACE,cAAC,EAAD,CACEa,MAAO,0CACPC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAO,yCACPC,KAAM,cAAC,EAAD,UCFCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCLDQ,EAAcC,4BAAH,8RCOxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,gBAAD,CAAeC,MCXE,GDWjB,UACE,cAACL,EAAD,IACA,cAAC,YAAD,IACA,cAAC,EAAD,SAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.38624a4a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.main`\r\n    padding: 14px;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n    list-style: inside;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    align-items: center;\r\n    grid-gap: 16px;\r\n    padding: 0;\r\n    margin: 32px 0 0 0;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    font-size: 18px;\r\n    color: #6E7E91;\r\n\r\n    &::marker {\r\n        color: #0366D6;\r\n    }\r\n`;","import React from 'react'\r\nimport { StyledList, ListItem } from \"../List/styled\";\r\n\r\nconst LearnList = () => (\r\n    <StyledList>\r\n        <ListItem>\r\n            React Context\r\n        </ListItem>\r\n        <ListItem>\r\n            Node.js\r\n        </ListItem>\r\n        <ListItem>\r\n            Cypress\r\n        </ListItem>\r\n        <ListItem>\r\n            Unit testing\r\n        </ListItem>\r\n        <ListItem>\r\n            React Context\r\n        </ListItem>\r\n        <ListItem>\r\n            Node.js\r\n        </ListItem>\r\n    </StyledList>\r\n);\r\n\r\nexport default LearnList;","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n    background: #ffffff;\r\n    max-width: 1216px;\r\n    margin: 72px auto;\r\n    box-shadow: 0px -2px 50px rgba(9, 10, 51, 0.02), 0px 16px 58px rgba(9, 10, 51, 0.03);\r\n    border-radius: 4px;\r\n    padding: 32px;\r\n`;\r\n\r\nexport const SubHeader = styled.h2`\r\n    margin: 0;\r\n    padding-bottom: 19px;\r\n    font-size: 30px;\r\n    border-bottom: 1px solid rgba(229, 229, 229, 1);\r\n`;","import React from 'react'\r\nimport { StyledSection, SubHeader } from './styled';\r\n\r\nconst Section = ({ title, body }) => (\r\n    <StyledSection>\r\n        <SubHeader>\r\n            {title}\r\n        </SubHeader>\r\n        {body}\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","import React from 'react'\r\nimport { StyledList, ListItem } from \"../List/styled\";\r\n\r\nconst SkillList = () => (\r\n    <StyledList>\r\n        <ListItem>\r\n            Semantic &amp; accessible HTML\r\n        </ListItem>\r\n        <ListItem>\r\n            Responsive Web Design\r\n        </ListItem>\r\n        <ListItem>\r\n            Teamwork\r\n        </ListItem>\r\n        <ListItem>\r\n            Markdown\r\n        </ListItem>\r\n        <ListItem>\r\n            Immutability\r\n        </ListItem>\r\n        <ListItem>\r\n            Semantic &amp; accessible HTML\r\n        </ListItem>\r\n        <ListItem>\r\n            Responsive Web Design\r\n        </ListItem>\r\n        <ListItem>\r\n            Teamwork\r\n        </ListItem>\r\n        <ListItem>\r\n            Markdown\r\n        </ListItem>\r\n        <ListItem>\r\n            Immutability\r\n        </ListItem>\r\n        <ListItem>\r\n            Semantic &amp; accessible HTML\r\n        </ListItem>\r\n        <ListItem>\r\n            Responsive Web Design\r\n        </ListItem>\r\n        <ListItem>\r\n            Teamwork\r\n        </ListItem>\r\n        <ListItem>\r\n            Markdown\r\n        </ListItem>\r\n        <ListItem>\r\n            Immutability\r\n        </ListItem>\r\n        <ListItem>\r\n            Semantic &amp; accessible HTML\r\n        </ListItem>\r\n        <ListItem>\r\n            Responsive Web Design\r\n        </ListItem>\r\n        <ListItem>\r\n            Teamwork\r\n        </ListItem>\r\n        <ListItem>\r\n            Markdown\r\n        </ListItem>\r\n        <ListItem>\r\n            Immutability\r\n        </ListItem>\r\n        <ListItem>\r\n            Semantic &amp; accessible HTML\r\n        </ListItem>\r\n        <ListItem>\r\n            Responsive Web Design\r\n        </ListItem>\r\n        <ListItem>\r\n            Teamwork\r\n        </ListItem>\r\n        <ListItem>\r\n            Markdown\r\n        </ListItem>\r\n        <ListItem>\r\n            Immutability\r\n        </ListItem>\r\n    </StyledList>\r\n);\r\n\r\nexport default SkillList;","import { Container } from \"./common/Container/styled\";\r\nimport LearnList from \"./common/LearnList\";\r\nimport Section from \"./common/Section\";\r\nimport SkillList from \"./common/SkillList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Section\r\n        title={\"My skillset includes 🛠️\"}\r\n        body={<SkillList />}\r\n      />\r\n      <Section\r\n        title={\"What I want to learn next 🚀\"}\r\n        body={<LearnList />}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    *,\r\n    *::before,\r\n    *::after {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        font-family: 'Inter', sans-serif;\r\n        background: #FBFBFE;\r\n        letter-spacing: 0.05em;\r\n    }\r\n`;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Normalize } from \"styled-normalize\";\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { theme } from './App/theme';\r\nimport { GlobalStyle } from './App/GlobalStyle';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <Normalize />\r\n      <App />\r\n    </ ThemeProvider >\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const theme = {};"],"sourceRoot":""}